% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cassettes.R
\name{insert_cassette}
\alias{insert_cassette}
\alias{eject_cassette}
\title{Manually insert and eject a cassette}
\usage{
insert_cassette(
  name,
  dir = NULL,
  record = NULL,
  match_requests_on = NULL,
  allow_playback_repeats = FALSE,
  serialize_with = NULL,
  preserve_exact_body_bytes = NULL,
  re_record_interval = NULL,
  clean_outdated_http_interactions = NULL,
  warn_on_empty = NULL
)

eject_cassette()
}
\arguments{
\item{name}{The name of the cassette. This is used to name a file on
disk, so it must be valid file name.}

\item{dir}{The directory where the cassette will be stored. If unspecified,
(and hasn't been set in \code{\link[=vcr_configure]{vcr_configure()}}) will use \code{test_path("_vcr")}.}

\item{record}{Record mode that dictates how HTTP requests/responses are
recorded. Possible values are:
\itemize{
\item \strong{once}, the default: Replays recorded interactions, records new ones
if no cassette exists, and errors on new requests if cassette exists.
\item \strong{none}: Replays recorded interactions, and errors on any new requests.
Guarnants that no HTTP requests occur.
\item \strong{new_episodes}: Replays recorded interactions and always records new
ones, even if similar interactions exist.
\item \strong{all}: Never replays recorded interactions, always recording new.
Useful for re-recording outdated responses or logging all HTTP requests.
}}

\item{match_requests_on}{Character vector of request matchers used to
determine which recorded HTTP interaction to replay. Possible values are:
\itemize{
\item \code{method}: the HTTP method.
\item \code{uri}: the complete request URI, excluding the port.
\item \code{uri_with_port}: the complete request URI, including the port.
\item \code{host}: the \strong{host} component of the URI.
\item \code{path}: the \strong{path} component of the URI.
\item \code{query}: the \strong{query} component of the URI.
\item \code{body}: the request body.
\item \code{header}: all request headers.
}

If more than one is specified, all components must match in order for the
request to match. If not supplied, defaults to \code{c("method", "uri")}.}

\item{allow_playback_repeats}{(logical) Whether or not to
allow a single HTTP interaction to be played back multiple times.
Default: \code{FALSE}.}

\item{serialize_with}{(character) Which serializer to use.
Valid values are "yaml" (default) and "json". Note that you can have
multiple cassettes with the same name as long as they use different
serializers; so if you only want one cassette for a given cassette name,
make sure to not switch serializers, or clean up files you no longer need.}

\item{preserve_exact_body_bytes}{(logical) Force a binary (base64)
representation of the request and response bondies? By default, vcr
will look at the \code{Content-Type} header to determine if this is necessary,
but if it doesn't work you can set \code{prevsere_exact_body_bytes = TRUE} to
force it.}

\item{re_record_interval}{(integer) How frequently (in seconds) the
cassette should be re-recorded. default: \code{NULL} (not re-recorded)}

\item{clean_outdated_http_interactions}{(logical) Should outdated
interactions be recorded back to file? default: \code{FALSE}}

\item{warn_on_empty}{Warn if the cassette is ejected but no interactions
have been recorded?}
}
\value{
A \link{Cassette}, invisibly.
}
\description{
Generally you should not need to use these functions, instead preferring
\code{\link[=use_cassette]{use_cassette()}} or \code{\link[=local_cassette]{local_cassette()}}
}
\section{Cassette options}{


Default values for arguments controlling cassette behavior are
inherited from vcr's global configuration. See \code{\link[=vcr_configure]{vcr_configure()}} for a
complete list of options and their default settings. You can override these
options for a specific cassette by changing an argument's value to something
other than \code{NULL} when calling either \code{insert_cassette()} or
\code{use_cassette()}.
}

\examples{
vcr_configure(dir = tempdir())

insert_cassette("hello")
current_cassette()

eject_cassette()
current_cassette()
}
\keyword{internal}
